package Match_Game;

import Decurator_Pattern.HowToPlayC;
import Decurator_Pattern.Idecurator;
import Facade_Pattern.Facade;
import Memento_Pattern.Caretaker;
import Memento_Pattern.Originator;
import State_Pattern.state;
import State_Pattern.Context;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.event.*;

/**
 * @author reprise
 */
//as Singleton class 
public class MainMenuForm extends javax.swing.JFrame implements state, Idecurator {

    
//--- Creational Pattern ----    
   //Singleton pattern
    private static MainMenuForm instance;

    private MainMenuForm() {
        initComponents();

    }
    
    public static MainMenuForm getInstance() {
        if (instance == null) {
            instance = new MainMenuForm();
        }
        return instance;
    }  
    
//--- Structural Pattern ----
    //Facade Pattern
    Facade f = new Facade();
    //Decurator Pattern
    Idecurator MainWithHow = new HowToPlayC(this);

//--- Behavioral Pattern ----
    //State Pattern
    Context c = new Context();
    //memento patter 
    Originator originator = new Originator();
    Caretaker careTaker = new Caretaker();

    /**
     * Creates new form MainMenuForm
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainMenuLabel = new javax.swing.JLabel();
        Start4x4Button = new javax.swing.JButton();
        Start6x6Button = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        howPlay = new javax.swing.JButton();
        history = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to MemoryTiles");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        MainMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Match_Game/TitleScreen.png"))); // NOI18N

        Start4x4Button.setText("Start 4x4 Game");
        Start4x4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start4x4ButtonActionPerformed(evt);
            }
        });

        Start6x6Button.setText("Start 6x6 Game");
        Start6x6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start6x6ButtonActionPerformed(evt);
            }
        });

        ExitButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        ExitButton.setText("Quit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        howPlay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        howPlay.setText("How To Play !");
        howPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howPlayActionPerformed(evt);
            }
        });

        history.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        history.setText("History of player");
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(howPlay, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Start6x6Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Start4x4Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(history, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(ExitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(howPlay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Start4x4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Start6x6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Play the original 4x4 Tile game.
    private void Start4x4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start4x4ButtonActionPerformed

        Start4x4Button.setSelected(true);
        
        //Memento Pattern
        originator.setState("Are You Sure Wanna Complate To " + MainMenuForm.Start4x4Button.getText() + " Level !");
        careTaker.add(originator.saveStateToMemento());
        int result = JOptionPane.showConfirmDialog(this, originator.getState());
        if (result == JOptionPane.NO_OPTION || result == JOptionPane.CANCEL_OPTION) {
            System.exit(0);
        }
        
        //State Pattern
        int x = 1;
        ShowWindow(c, x);
        
        //Facade pattern
        f.Shuffle4x4();
    }//GEN-LAST:event_Start4x4ButtonActionPerformed

    //Quit the whole program
    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    //Play the new 6x6 Tile Game
    private void Start6x6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start6x6ButtonActionPerformed
        
        Start6x6Button.setSelected(true);
        
        //Memento Pattern
        originator.setState("Are You Sure Wanna Complate To " + MainMenuForm.Start6x6Button.getText() + " Level !");
        careTaker.add(originator.saveStateToMemento());
        int result = JOptionPane.showConfirmDialog(this, originator.getState());
        if (result == JOptionPane.NO_OPTION || result == JOptionPane.CANCEL_OPTION) {
            System.exit(0);
        }
        
        //State Pattern
        int y = 2;
        ShowWindow(c, y);
        
        //Facade pattern 
        f.Shuffle6x6();
    }//GEN-LAST:event_Start6x6ButtonActionPerformed

    private void howPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howPlayActionPerformed
        // TODO add your handling code here:

        //Decurator Pattern
        MainWithHow.HowToPlay();
    }//GEN-LAST:event_howPlayActionPerformed

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:

        //Memento Pattern
        originator.getStateFromMemento(careTaker.get(0));
        JOptionPane.showMessageDialog(null, "You have been Through '" + originator.getState() + "' \n\t Press Ok To See Your Next State.");
        //System.out.println("First saved State: " + originator.getState());
        if (Start4x4Button.isSelected()) {
            originator.getStateFromMemento(careTaker.get(1));
            JOptionPane.showMessageDialog(null, "Next saved State: ' " + originator.getState() + " '");
            //System.out.println("Second saved State: " + originator.getState());
        }
        if (Start6x6Button.isSelected()&& Start4x4Button.isSelected()) {
            originator.getStateFromMemento(careTaker.get(2));
            JOptionPane.showMessageDialog(null, "Next saved State: ' " + originator.getState() + " '");
            //System.out.println("Theird saved State: " + originator.getState());
        }
        
        if (Start6x6Button.isSelected()&& !Start4x4Button.isSelected()) {
            originator.getStateFromMemento(careTaker.get(1));
            JOptionPane.showMessageDialog(null, "Next saved State: ' " + originator.getState() + " '");
            //System.out.println("Theird saved State: " + originator.getState());
        }

    }//GEN-LAST:event_historyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton ExitButton;
    private javax.swing.JLabel MainMenuLabel;
    public static javax.swing.JButton Start4x4Button;
    public static javax.swing.JButton Start6x6Button;
    public javax.swing.JButton history;
    public javax.swing.JButton howPlay;
    // End of variables declaration//GEN-END:variables

    //state
    GameBoard smallGame = new GameBoard();
    GameBoard2 mediumGame = new GameBoard2();
    
    //State Pattern
    @Override
    public void ShowWindow(Context c, int type) {
        if (type == 1) {
            smallGame.setVisible(true);
            c.setState(this);
        } else if (type == 2) {
            mediumGame.setVisible(true);
            c.setState(this);
        }
    }
    
    //Without Decurator Pattern
    @Override
    public void HowToPlay() {
        JOptionPane.showMessageDialog(null, "WELCOME...\nTo start playing you have to select one of two levels \n"
                + "(4x4) or (6x6) which is harder but more Enjoyable \n Press OK and start !!.");
    }

    //Memento Pattern
    public void call() {
        originator.setState("WELCOME ... YOU ARE IN MEMORY MATCH GAME ");
        JOptionPane.showMessageDialog(null, originator.getState());
        careTaker.add(originator.saveStateToMemento());
    }

}

